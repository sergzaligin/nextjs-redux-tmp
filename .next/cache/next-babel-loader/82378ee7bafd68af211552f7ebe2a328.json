{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { postsAPI } from './api';\nconst initialState = {\n  posts: null\n};\nconst SET_POSTS = 'SET_POSTS';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      return _objectSpread({}, state, {\n        posts: action.posts\n      });\n\n    default:\n      return state;\n  }\n});\nexport const setPosts = posts => ({\n  type: SET_POSTS,\n  posts\n});\nexport const fetchPosts = () => {\n  return async dispatch => {\n    const response = await postsAPI.list();\n    console.log('res', response);\n    dispatch(setPosts(response));\n  };\n};","map":{"version":3,"sources":["/home/sergey/Documents/NextJS/examples/with-redux-thunk-app/test-reducer.js"],"names":["postsAPI","initialState","posts","SET_POSTS","state","action","type","setPosts","fetchPosts","dispatch","response","list","console","log"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAIA,MAAMC,SAAS,GAAG,WAAlB;AAEA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEC,SAAKH,SAAL;AAEC,+BACIC,KADJ;AAECF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFf;;AAKD;AACC,aAAOE,KAAP;AAVF;AAYA,CAbD;AAeA,OAAO,MAAMG,QAAQ,GAAIL,KAAD,KAAY;AAAEI,EAAAA,IAAI,EAAEH,SAAR;AAAmBD,EAAAA;AAAnB,CAAZ,CAAjB;AAEP,OAAO,MAAMM,UAAU,GAAI,MAAM;AAEhC,SAAO,MAAMC,QAAN,IAAkB;AAClB,UAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAvB;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,QAAnB;AACAD,IAAAA,QAAQ,CAACF,QAAQ,CAACG,QAAD,CAAT,CAAR;AACA,GAJD;AAOA,CATM","sourcesContent":["import { postsAPI } from './api';\n\nconst initialState = {\n\tposts: null,\n};\n\nconst SET_POSTS = 'SET_POSTS';\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\n\t\tcase SET_POSTS: \n\t\t\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.posts,\n\t\t\t};\n\t\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const setPosts = (posts) => ({ type: SET_POSTS, posts });\n\nexport const fetchPosts =  () => {\n\n\treturn async dispatch => { \n        const response = await postsAPI.list();\n\t\tconsole.log('res', response);\n\t\tdispatch(setPosts(response));\n\t};\n\t\n\n};\n"]},"metadata":{},"sourceType":"module"}