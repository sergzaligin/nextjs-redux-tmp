{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { postsAPI } from './api';\nvar initialState = {\n  posts: null\n};\nvar SET_POSTS = 'SET_POSTS';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_POSTS:\n      return _objectSpread({}, state, {\n        posts: action.posts\n      });\n\n    default:\n      return state;\n  }\n});\nexport var setPosts = function setPosts(posts) {\n  return {\n    type: SET_POSTS,\n    posts: posts\n  };\n};\nexport var fetchPosts = function fetchPosts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return postsAPI.list();\n\n              case 2:\n                response = _context.sent;\n                console.log('res', response);\n                dispatch(setPosts(response));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/sergey/Documents/NextJS/examples/with-redux-thunk-app/test-reducer.js"],"names":["postsAPI","initialState","posts","SET_POSTS","state","action","type","setPosts","fetchPosts","dispatch","list","response","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAIA,IAAMC,SAAS,GAAG,WAAlB;AAEA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEC,SAAKH,SAAL;AAEC,+BACIC,KADJ;AAECF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFf;;AAKD;AACC,aAAOE,KAAP;AAVF;AAYA,CAbD;AAeA,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACL,KAAD;AAAA,SAAY;AAAEI,IAAAA,IAAI,EAAEH,SAAR;AAAmBD,IAAAA,KAAK,EAALA;AAAnB,GAAZ;AAAA,CAAjB;AAEP,OAAO,IAAMM,UAAU,GAAI,SAAdA,UAAc,GAAM;AAEhC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACuBT,QAAQ,CAACU,IAAT,EADvB;;AAAA;AACMC,gBAAAA,QADN;AAENC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,QAAnB;AACAF,gBAAAA,QAAQ,CAACF,QAAQ,CAACI,QAAD,CAAT,CAAR;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,CATM","sourcesContent":["import { postsAPI } from './api';\n\nconst initialState = {\n\tposts: null,\n};\n\nconst SET_POSTS = 'SET_POSTS';\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\n\t\tcase SET_POSTS: \n\t\t\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.posts,\n\t\t\t};\n\t\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const setPosts = (posts) => ({ type: SET_POSTS, posts });\n\nexport const fetchPosts =  () => {\n\n\treturn async dispatch => { \n        const response = await postsAPI.list();\n\t\tconsole.log('res', response);\n\t\tdispatch(setPosts(response));\n\t};\n\t\n\n};\n"]},"metadata":{},"sourceType":"module"}