{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport fetch from 'isomorphic-unfetch';\nvar instance = axios.create({\n  baseURL: 'http://localhost:4445/api/'\n});\nexport var postsAPI = {\n  list: function () {\n    var _list = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:4445/api/article/list\");\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function list() {\n      return _list.apply(this, arguments);\n    }\n\n    return list;\n  }(),\n  getOne: function getOne(id) {\n    return instance.post(\"article/\".concat(id));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}